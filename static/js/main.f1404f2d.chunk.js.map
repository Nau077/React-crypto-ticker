{"version":3,"sources":["nXzIRGpe5eg.jpg","components/CloseClick.js","components/Cryptocurrency.js","components/Tickers.js","components/HandleClick.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CloseClick","document","querySelector","style","display","_this","this","react_default","a","createElement","onClick","e","closeClick","className","React","Component","Cryptocurrency","_this$props$data","props","data","name","id","symbol","price_usd","percent_change_1h","percent_change_24h","percent_change_7d","toFixed","Tickers","state","_this2","axios","get","then","response","wantedArr","normalizeData","setState","wanted","Object","keys","reduce","acc","key","current","includes","toLowerCase","push","quotes","USD","price","_this3","fetchCryptocurrencyData","interval","setInterval","tickers","map","currency","components_Cryptocurrency","src","require","components_CloseClick","HandleClick","handleClick","App","src_components_Tickers","components_HandleClick","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","getElementById","URL","process","href","origin","addEventListener","concat","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f1404f2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nXzIRGpe5eg.e0fbb68a.jpg\";","import React, { Component } from 'react';\r\n import './Tickers.css';\r\n\r\nclass CloseClick extends React.Component{\r\n   \r\n    closeClick() {\r\n        const overlay2 = document.querySelector('.overlay');\r\n            overlay2.style.display = \"none\";\r\n    }    \r\n    render() {\r\n        // This syntax ensures `this` is bound within handleClick\r\n        return (\r\n            <button onClick={(e) => this.closeClick(e)} className={\"confirm-btn yes-btn\"}>\r\n            Sure\r\n            </button>\r\n        );\r\n      }\r\n}\r\n\r\n\r\nexport default CloseClick;\r\n","import React, { Component } from 'react';\r\n\r\nclass Cryptocurrency extends Component {\r\n    render () {\r\n        var {\r\n            id, \r\n            name, \r\n            symbol,\r\n            price_usd,\r\n            percent_change_1h,\r\n            percent_change_24h,\r\n            percent_change_7d,\r\n        } = this.props.data;\r\n        return (\r\n            <li className = {\"cryptocurrency\" + name   }  >\r\n            <p className=\"cryptocurrency-name\">{name} ({symbol})</p>\r\n            <h1>${(+price_usd).toFixed(2)}</h1>\r\n            <p>{percent_change_1h}% 1hr</p>\r\n             <p>{percent_change_24h}% 24hr</p>\r\n            <p>{percent_change_7d}% 7days</p>\r\n             </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cryptocurrency;\r\n\r\n\r\n ","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport CloseClick from './CloseClick';\r\nimport Cryptocurrency from './Cryptocurrency';\r\nimport './Tickers.css';\r\n\r\nclass Tickers extends Component {\r\n    fetchCryptocurrencyData(){\r\n        // axios.defaults.headers.common['Authorization'] = \"1438519b-6ab6-470f-86bd-6c95a61d0828\";\r\n     axios.get(\"https://api.coinmarketcap.com/v2/ticker/?limit=10\")\r\n        .then(response => {\r\n            var wanted = [\"bitcoin\", \"ethereum\",\"litecoin\",\"eos\",\"xrp\"];\r\n            // var result = response.data.filter(currency => wanted.includes(currency.id));\r\n            var wantedArr = this.normalizeData(wanted, response.data.data);\r\n \r\n            this.setState({data: wantedArr});\r\n \r\n        })\r\n\r\n    }\r\n    \r\n    normalizeData(wanted, data)  {\r\n        return Object.keys(data).reduce((acc, key) => {\r\n            const current = data[key];\r\n            if (wanted.includes(current.name.toLowerCase())) {\r\n                acc.push({\r\n                    id: current.id,\r\n                    name: current.name,\r\n                    symbol: current.symbol,\r\n                    price_usd: current.quotes.USD.price,\r\n                    percent_change_1h: current.quotes.USD.percent_change_1h,\r\n                    percent_change_24h: current.quotes.USD.percent_change_24h,\r\n                    percent_change_7d: current.quotes.USD.percent_change_7d,\r\n                })\r\n            }\r\n            return acc;\r\n        }, [])\r\n    }\r\n            //  &&*()*()*()\r\n         \r\n    \r\n    componentDidMount() {\r\n        this.fetchCryptocurrencyData();\r\n        this.interval = setInterval(() => this.fetchCryptocurrencyData(), 1 *1000);\r\n        \r\n    }\r\n    state = {\r\n        data: [ \r\n            {\r\n                id: \"bitcoin\",\r\n                name: \"Bitcoin\",\r\n                symbol: \"BTC\",\r\n                price_usd: \"1\",\r\n                percent_change_1h: \"0\",\r\n                percent_change_24h: \"0\",\r\n                percent_change_7d: \"0\",\r\n            },\r\n            {\r\n                id: \"ethereum\",\r\n                name: \"Ethereum\",\r\n                symbol: \"ETH\",\r\n                price_usd: \"1\",\r\n                percent_change_1h: \"0\",\r\n                percent_change_24h: \"0\",\r\n                percent_change_7d: \"0\",\r\n            },\r\n            {\r\n                id: \"litecoin\",\r\n                name: \"Litecoin\",\r\n                symbol: \"LTC\",\r\n                price_usd: \"1\",\r\n                percent_change_1h: \"0\",\r\n                percent_change_24h: \"0\",\r\n                percent_change_7d: \"0\",\r\n            },\r\n            {\r\n                id: \"xrp\",\r\n                name: \"XRP\",\r\n                symbol: \"XRP\",\r\n                price_usd: \"1\",\r\n                percent_change_1h: \"0\",\r\n                percent_change_24h: \"0\",\r\n                percent_change_7d: \"0\",\r\n            },\r\n            {\r\n                id: \"eos\",\r\n                name: \"EOS\",\r\n                symbol: \"EOS\",\r\n                price_usd: \"1\",\r\n                percent_change_1h: \"0\",\r\n                percent_change_24h: \"0\",\r\n                percent_change_7d: \"0\",\r\n            },\r\n            {\r\n                id: \"EOS\",\r\n                name: \"EOS\",\r\n                symbol: \"EOS\",\r\n                price_usd: \"1\",\r\n                percent_change_1h: \"0\",\r\n                percent_change_24h: \"0\",\r\n                percent_change_7d: \"0\",\r\n            },\r\n        ]\r\n    }\r\n\r\n \r\n\r\n    render() {\r\n        var tickers = this.state.data.map((currency) =>\r\n        <Cryptocurrency data={currency} key={currency.id}/>\r\n        );\r\n     \r\n        return (\r\n            <div className=\"tickers-containers\">\r\n            <ul className=\"tickers\">{tickers} </ul>\r\n            <p className = {\"info\"}>Information takes 10 seconds to fetch</p>\r\n\r\n\r\n        <div className={\"overlay\"}>\r\n            <div className={\"confirm-modal\"}>\r\n            <h3 className={\"confirm-title\"}>Do you expect innovation?</h3>\r\n            <img src={require(\"../nXzIRGpe5eg.jpg\")}  className={\"gorbach\"}/>\r\n                \r\n                <div className={\"confirm-buttons\"}>                  \r\n                    <CloseClick/>            \r\n               </div>\r\n            </div>\r\n        </div>     \r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Tickers;","import React, { Component } from 'react';\r\nimport './Tickers.css';\r\n\r\nclass HandleClick extends React.Component {\r\n          \r\n    handleClick() {\r\n        const overlay = document.querySelector('.overlay');\r\n        overlay.style.display = \"flex\";    \r\n    }\r\n  \r\n    render() {\r\n      // This syntax ensures `this` is bound within handleClick\r\n      return (\r\n        <button onClick={(e) => this.handleClick(e) } className={\"confirm-btn yes-btn\"}>\r\n          Click me!\r\n        </button>\r\n      );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default HandleClick;\r\n\r\n ","import React, { Component } from 'react';\nimport Tickers from './components/Tickers';\nimport HandleClick from './components/HandleClick';\nimport './App.css';\n\n\nclass App extends Component {\n \n  render() {\n   \n    return (\n      <div className=\"App\">\n      <div className=\"App-header\" id=\"App-header\">\n       <h2>Crypto-ticker</h2>\n      </div>\n\n      <Tickers/>\n      <HandleClick/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n \n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}